server{
	server_name 127.0.0.1;
	listen 9001;
	root /mnt/file;
	index index.html;#如果url是以/结尾,表示是文件夹,就去找这个文件夹下的index.html文件

	location /a {
		root /mnt/file;#如果是root,就表示/a这一个要作为目录
		# alias /mnt/file;#表示/a不作为路径只是作为uri的匹配部分,不作为目录路径
		try_files $uri $uri/ @router;#try_files还是要进入该location中,如果找不多对应文件,就直接跳转到另一个location中
		# index index.html index.htm;
	}

	location = /a {
		root /mnt/file;#表示url中必须有a,同时也只能是a,后面可以加文件名(比如:index.html,a.html等)
		# alias /mnt/file;#表示/a不作为路径只是作为uri的匹配部分
		try_files $uri $uri/ @router;
		# index index.html index.htm;
	}

    location / {
       root /mnt/file/;
       index index01.html;#使用index时,匹配进来后,会先找/mnt/file/index01.html,如果找到了,内部重定向就像从客户端再一次发起请求一样,重新再映射一遍location,依次反复,很有可能导致无限循环的搜索location.
    }


    location @router {
        rewrite ^.*$ /index1.html last;
    }

#	location / {
#		root /mnt/file/;
#	
#	}	
}
