HashMap的底层原理

存储结构:
	数组,单向链表,红黑树
特点:
	快速插入
	快速查询
	自动扩容

算法:
	hash  == hashCode 异或 (hashCode >>> 16)

	hash & (16-1)  == hash % 16

hash冲突:
	使用单向链表,解决hash冲突
	同hash值时,在此hash值的脚标处创建单向链表,当JDK1.8时,单向链表长度超过8个时,就替换为红黑树结构,查询更加快
初始大小,扩容机制,触发条件
	16个
	扩容为以前的2倍
	存储容量达到0.75时为触发条件,综合考虑空间和时间

