Redis 
	是什么?
		-->remote dictionary server(远程字典服务)
		-->非关系型数据库(nosql-not only sql)

	干什么?
		-->用于缓存,消息或者数据库中间件

	缓存什么时候用?
		-->高并发,不经常改变内容

	默认端口?
		-->6379

	linux中如何后台启动?
		-->[root@localhost bin]# ./redis-server redis.conf

	linux如何关闭redis?
		-->[root@localhost bin]# ./redis-cli shutdown

	linux如何开启redis使用连接?
		-->[root@localhost bin]# ./redis-cli

	linux如何开启远程redis使用连接?
		-->[root@localhost bin]# ./redis-cli -h 192.168.25.128 -p 6379

	存储的数据有什么类型?
		-->字符串
		-->java对象(序列化后)

	五种数据类型?
		-->String:key-value(做缓存)
		-->Hash:key-fields-value(做缓存)


	注意点?
		-->key的值区分大小写
		-->命令不区分大小写
		-->redis不适合保存数据量大的数据

	默认多少个数据库?
		16个
		可以在redis.conf配置文件中设置数据库的数量(databases 16)
	默认数据库编号
		默认为db0

	常见命令?
		String
			get
			set
			decr keyname(减运算)
			incr keyname(加运算)
			getset keyname value(先获取值,再设置值)
			setex keyname 100(时间) value(设置key的过期时间)
			persist keyname(不过期)
			sexnx keyname value(如果key不存在,才起作用)
		Hash
			hset hash1 field1 1
			hget hash1 field1
			hincrby
			hdecrby
			hexists hash1 field1(存在hash和field才返回1,否者返回0)
			hsetnx hash1 field1 value(如果key和field都不存在时,才起作用)

		list
			lpush(left push) list1 1 2 3
			rpush(right push) list1 1 2 3
			lrange list1 0 -1(是索引)
			lpop list1

		set
			sadd set1 a b c d
			smembers set1
			srem set1 a(删除set中的数据)
			spop set1(随机删除set1中一个数据)

		sorted set
			zadd zset 5 a 6 d 3 c

		其他常用操作
			flushdb(删除数据库中的所有key)
			flushall(删除所有数据库的数据)
			expire keyname 100(时间/s)(设置过期时间)
			persist keyname(持久化key)
			(integer)96:这个不是命令,是结果,表示还剩96s过期

		事务操作(不支持回滚)
			第一步:multi(开始事务操作)
			第二步:写几条需要被事务管理的操作代码(get keyname 123...set keyname 12345)
			第三步:exec(逐条执行语句)
			第四步:如果执行成功的返回ok,错误的error

		watch keyname
		multi
		两个命令操作
		exec

		master-redis
		slave-redis1
		slave-redis2
			1.此时有一个master-redis,两个slave-redis,在将redis1和redis2设置为slave-redis前,有大量数据在master-redis中,当redis1和redis2设置为slave-redis后,会将所有master-redis中的数据复制到slave-redis1和slave-redis2中(这种叫做全局复制)
			2.当redis1和redis2设置为slave-redis后,master-redis增加的数据也会复制到slave-redis1和slave-redis2中(这种叫做增量复制)

		主从复制
			作用
				-->容灾备份(当master-redis挂掉,slave-redis中复制了master-redis的数据,这样并没有影响,继续工作)
				-->读写分离(slave-redis只能读)

		哨兵模式作用?
			-->当master-redis挂掉时,slave-redis1和slave-redis2原地待命,此时没有master-redis可用
			-->master-redis挂掉后一会儿就会从slave-redis1和slave-redis2选举一个出来作为master-redis,master-redis回来后就只能作为slave-redis了.以选举产生的master-redis作为master

			优点:自动选举master-slave,不用手动,及时解决

			缺点:如果master-redis有100个slave-redis,master-redis挂掉时,复制到slave-redis时,就会复制100份,非常浪费时间,这样就会产生延迟.

		redis持久化方案作用?
			作用
				-->为了在redis重启时,不让数据丢失,将数据缓存在内存中的数据,持久化在磁盘中

				方式一:Rdb(快照方式)
					-->每过一段时间,根据key发生改变的数量,将利用fork函数复制一份父进程作为子进程,这样不影响父进程的运行,子进程就将内存中缓存数据保存在dump.rdb文件中(设置时间间隔和dump.rdb文件的位置在redis.conf配置文件中配置)
				方式二:AOF
					每隔一秒对缓存的操作命令进行备份


		redis-cluster(redis集群)
			-->利用crc16算法对keyname,计算出hash槽的位置(0-16383),将key-value放入该槽中.
			-->至少三个节点

		redis集群不可用的条件
			-->节点超过半数就死掉
			-->hash槽不可用的情况下

		发布与订阅
			subscribe：订阅
				--》subscribe cctv3
			publish:发布
				--》publish cctv3 aaa
				--》订阅了cctv3的，就会接受到aaa

		









