SQL语句优化
	优化的几种方式?
		-->sql语句优化
		-->数据库表结构优化
		-->其他

	空间上
		-->尽可能估算字段所需要的数据长度,切不可太长或者默认

	速度上
		-->尽量不要使用Order by rand(),这样会重复查询数据,使用max(id) * rand()更好

		-->最小化你要查询的数据,查询自己需要的字段就ok,如果使用mybatis的话,在mapper.xml中提前配置好可能需要的查询字段sql.

		-->少使用not in,改用not exists

			原因1:
				null与任何值(加上null)都为false,如果不能保证字段是否设置了not null这个属性,否则不要用not in后面加子查询,要么在在查询的时候一定要加上is null或者is not null.

			原因2:
				not exists会生成Hash anti join的计划,hash anti join更加高效
				然而not in不会
				当数据量大时,not exists就会体现出优势

		-->尽量使用>=3,少使用>2
			原因1:
				>=3时,直接将=3的索引数据拿来就行无需与=3的索引字段比较;然而>2时,会先找出为2的索引记录,

		-->尽量将sql语句写成数据库要求的规范
			原因:
				首先数据库会对sql语句转化成标准的sql语句,比如select会转化成SELECT,这样就会占用内存空间去处理这种操作.

		-->尽量使用表的别名加在字段的前面
			原因:
				sql语句连接多个表时,表别名.字段就直接找到这个的某一个字段,如果直接写一个字段,数据库会判断这个字段是哪一个表的字段,会增加解析时间.

		-->
